Java is object oriented programming language.

Collection: 1.List: 1)ArrayList  
                        List <data-type> list1= new ArrayList();  
                    2)LinkedList
                        List <data-type> list2 = new LinkedList();  
                    3)Vector:(insert, delete, search, sort, iterate, replace operations)
                        List <data-type> list3 = new Vector(); 
                    Vector & ArrayList is same and use dynamic array to store the elements.
                    Linkedlist uses Doubly linked list to store the elements.

            2.Queue: 1)PriorityQueue
                         Queue<String> q1 = new PriorityQueue(); 
                     2)ArrayDequeue
                         Queue<String> q2 = new ArrayDeque();
                    Queue interface maintains the first-in-first-out order.In Deque, we can remove and add the elements from both the side.

            A)Comparable:1)Single Sorting sequence 2)affects the original class 3)compareTo() 4)java.lang 5)Collections.sort(List)

            B)Comparator:1)Multiple sorting sequences 2)does not affects the original class 3)compare() 4)java.lang 5)Collections.sort(List, Comparator)

            3.Set: 1)HashSet: It uses hash table to store the elements. It contains unique items.
                      Set<data-type> s1 = new HashSet<data-type>();  
                   2)LinkedHashSet: Insertion order
                      Set<data-type> s2 = new LinkedHashSet<data-type>();
                   3)TreeSet: It is quite fast than others
                      Set<data-type> s3 = new TreeSet<data-type>(); 
                  

            4.Map: Map Provides Key-Value pair
                   1)HashTable
                   2)HashMap:HashMap is the implementation of Map, but it doesn't maintain any order.
                   3)LinkedHashMap:LinkedHashMap is the implementation of Map. It inherits HashMap class. It maintains insertion order.
                   4)TreeMap:TreeMap is the implementation of Map and SortedMap. It maintains ascending order.
