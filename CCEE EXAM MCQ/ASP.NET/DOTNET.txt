[Read C# theory & 100 mcqs]

classes in C#
1.Abstract Class
2.Sealed Class
3.Static 
4.Partial

1.
*.NET- It is a developer platform made up of tools, programming languages, and libraries for building many different types of applications.
*.NET Framework- .NET Framework is the execution and development environment for .NET applications.
* IL(Intermidiate Language)- A low-level assembly language, always interpreted by the .NET runtime, Platform independence and easy portability
  JIT(Just-In-Time)- converting IL code into machine code or dynamically compile IL code into machine code (Pre-JIT= entire code into native code at one stretch., Econo-JIT=It compiles the IL code bit-by-bit,, Normal-JIT=compiles code only as it is)
*Assembly- (.exe & .dll)files, A compiled unit of code that contains metadata and IL code
*CLR(Common Language Runtime)- Heart of .NET framework, runtime environment that executes MSIL code, CLR is present in every .NET framework version,
 CLS- subset of CTS, CLS enables cross-language integration or Interoperability.
 CTS- CTS is responsible for understanding all the data type systems of .NET programming languages and converting them into CLR understandable format which will be a common format. 
 Garbage Collector-  GC.Collect(), Code that is run under the garbage collection system is 'managed code'
 Memory Management- stack for store value, Heap for store objects
 App-Domain- provide isolation, unloading, and security boundaries for executing managed code
*Security- (CAS- Code Access Security)-  to prevent unauthorized code from performing harmful actions.

2.
*.NET Core- cross-platform and new apps and services, (Windows, macOS, Linux)
 .NET Framework- for legacy apps, (Windows only)
 Xamarin- Mobile apps only (Android, iOS, macOS)
*Versions-  .NET Framework 1.0 is the first
            ASP.NET Core= 5.0
            WPF & WCF= 3.0
            Entity Framework= 3.5
            Recent .NET Core= 6.0
*Managed Code- Code that is executed by the (CLR), C# and VB.NET language is used, Platform independence and automatic memory management and garbage collection 
 Unmanaged Code-  Code that is directly executed by the CPU without any runtime environment, C++ used, 
*Intro of VS code- Lightweight, cross platform, (run on all OS), support many languages, Microsoft Visual Studio 2019 only runs on Windows.
*ILDASM(IL Disassembler)- To decompile .NET assemblies into human-readable IL code, (.exe & .dll files), allows inspecting the IL code

3.
DataTypes- ValueType(Simple(int, char, boolean, float, etc), Enum, struct, nullable), ReferenceType(Class, Interface, Array, Delegate)
Boxing-  Value type is converted to object type
Unboxing-  Object type is converted to a value type
Access Specifier- public, private, protected, internal
Method Overloading- Same name with different signature  


12. 
*Thread Start: Thread.Start()-Running.[Method]
*Parametertized Thread start- [Delegate]
*Thread pool-[Class]
*Lock: Only One thread at a time
*Monitor: Provides more control over the synchronization of various threads trying to access the same lock of code.




13-19(100 Questions)
*ASP.NET- It is a server-side technology used for developing dynamic websites and web applications. It is the latest version of Active Server Pages which Microsoft developed for building dynamic applications.
          The first version of ASP.NET was released in 2002. It helps to produce data-driven, interactive web applications on the internet.

*ASP.NET MVC- ASP.NET MVC is an open-source software used to develop dynamic websites and applications on the .Net framework by combining the features of MVC. MVC is a pattern used to design user interfaces,                   data, and application logic to achieve separation of concerns.It helps applications to reduce their complexity and makes them more accessible in coding, debugging, and testing. ASP.NET MVC was 
              first released in 2007 by Microsoft with the existing ASP.NET features.

*MVC- Model View Controller(making the application more maintainable and testable)
 Model- It represents the shape of the data. It also stores data and its related logic. Model is also responsible for the response to the request from the view and controller and updates itself. 
 View- It is a user interface, which displays model data to the user and enables them to modify it. It also represents the present data in the form of charts, diagrams, and tables.
 Controller- It is a part of the application which handles the user's request and user interaction. The controller transfers a command to the model to update itself. It also manages the HTTP requests raised by 
             the user and view.
 STEPS- User makes request in view-> request from view goes to controller-> then goes to model-> model checks request-> page will generate results-> It will unload that result in view engine    
 Advantages: easy to implement applications.
             easy to support new users.
             It provides separation of concerns which helps applications run efficiently.
             MVC provides separate testing for classes and objects
             avoid complexity 
             support for test-driven development for the applications

*States Management Techniques: managing the user's interactions with the application over time.
                               Server Side= Application, Session, Profile, Cache
                               Client Side= View, Control, Hidden, Cookies

*CONTROLLERS: To handle user input and interact with model and view.
 ACTION: It is a method in a controller that handles a user request and returns a response, Actions are explicitly mapped to URLs in "web.config" file
          web.config= app level configuration
          global.asax= app level event
          package.config= managed by NuGet

*MVC module: 1.It is a self-contained unit of functionality.
             2.Provide reusable and extensible functionality.
             3.They are organized into folders based on their functionality.
  Area: It is used to organize related functionality into separate sections.

*ADO.NET: 1.It is a data access technology used to manage data on the server.
          2.Primary Components: SqlConnection-establish a connection to a database, SqlCommand-execute SQL queries and commands on the database, and SqlDataReader-retrieve data from the database .



20.
*Localization in MVC: It is the process of adapting software to meet the requirements of local markets and different languages.
*Deploying: Enabling IIS(Internet Information Services) and required IIS components on Windows 10

21.(38 Questions)
*Web API(Application programming Interface)- It is set of rules, it define how apps or devices can connect & communicate with each other.
                                            HttpResponseMessage(for return data)
                                            Used to access service data in web apps, mobile apps and other external devices to build web services.
                                            Used to create RESTful(Representational State Transfer) web services, which is an architectural style for networked hypermedia applications.
                                            Lightweight, Maintainable, Scalable, and support limited Bandwidth.
                                            Create simple HTTP web Service & supports XML, JSON, etc..
*CORS(Cross Origin Resource Sharing)- is W3C standard that allows server to relax same-origin policy. Using CORS, a server can explicitly allow some cross-origin requests while rejecting others. CORS is safer and more flexible
*Different Verbs- POST(Create data), GET(Retrive or get data), PUT(Update data), and DELETE(Delete data)
*Consuming API- Creating client which can send requests to the API that you build, using the HttpClient class
*Newtonsoft API's-  JSON library for serializing and deserializing JSON data.







1.B
2.A
3.C
4.D
5.D
6.A
7.C
8.D
9.D
10.A
11.C
12.C
13.
14.
15.D
16.D
17.C
18.D
19.A
20.A
21.B
22.C
23.D
24.D
25.A
26.A
27.
28.C
29.C
30.
31.A
32.C
33.
34.
35.
36.A
37.B
38.C
39.B
40.B


Cookies- Persistent & non-Persistent
Web app contain more than one web.config files.
Types of Authentications: Windows, .NET Passport, Forms, Custom















